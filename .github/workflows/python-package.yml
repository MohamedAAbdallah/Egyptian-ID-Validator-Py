name: egyptian_id_validator

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: bash

    - name: Test with pytest
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest --maxfail=1 --disable-warnings -q
      shell: bash

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: pwsh

    - name: Lint with flake8 (Windows)
      if: runner.os == 'Windows'
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: pwsh

    - name: Test with pytest (Windows)
      if: runner.os == 'Windows'
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest --maxfail=1 --disable-warnings -q
      shell: pwsh

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash

    - name: Lint with flake8 (macOS)
      if: runner.os == 'macOS'
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: bash

    - name: Test with pytest (macOS)
      if: runner.os == 'macOS'
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest --maxfail=1 --disable-warnings -q
      shell: bash
